DESCRIPTION:
Write a function that takes an array of numbers (integers for the tests) and a target number. It should find two different items in the array that, when added together, give the target value. The indices of these items should then be returned in a tuple / list (depending on your language) like so: (index1, index2).

For the purposes of this kata, some tests may have multiple answers; any valid solutions will be accepted.

The input will always be valid (numbers will be an array of length 2 or greater, and all of the items will be numbers; target will always be the sum of two different items from that array).

Based on: http://oj.leetcode.com/problems/two-sum/

twoSum([1, 2, 3], 4) // returns [0, 2] or [2, 0]


***********************************************************************************************


// Función twoSum que encuentra dos números en el array 'numbers' cuya suma es igual a 'target'.
twoSum(numbers, target);
// Crea un nuevo objeto Map para almacenar los números y sus índices.
numToIndex = nuevo Mapa();

// Utiliza el método map para iterar sobre cada número en el array 'numbers'.
resultados = map((num, i) => {
  // Calcula el complemento necesario para alcanzar el objetivo.
  complemento = target - num

  // Verifica si el complemento está presente en el Map.
  si(numToIndex tiene la clave complemento),
    // Devuelve un array con los índices de los dos números que suman al objetivo.
    devolver[índice del complemento, i]
  sino:
  // Actualiza el Map con el número actual y su índice, y  obtén el índice actual.
  numToIndex.set(num, i)
  índiceActual = numToIndex.get(num)
            // Devuelve el índice actual.
            devolver índiceActual
}, numbers)

// Filtra los resultados para eliminar aquellos que son undefined (cuando no se encuentra una pareja que sume al objetivo).
resultadosFiltrados = filtrar(resultados, result => result no es undefined)

    // Devuelve el array filtrado de resultados.
    devolver resultadosFiltrados
